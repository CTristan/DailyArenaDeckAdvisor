<Window x:Class="DailyArena.DeckAdvisor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:DailyArena.DeckAdvisor"
		xmlns:converters="clr-namespace:DailyArena.Common.Converters;assembly=DailyArena.Common"
		xmlns:p="clr-namespace:DailyArena.DeckAdvisor.Properties"
        mc:Ignorable="d"
        Title="Daily Arena Deck Advisor" Height="880" Width="1270" Loaded="Window_Loaded" FontSize="{Binding SelectedFontSize.Value}">
	<Window.Resources>
		<converters:NullImageConverter x:Key="NullImageConverter" />
		<local:TabTemplateSelector x:Key="TabTemplateSelector" />
		<local:ContentTemplateSelector x:Key="ContentTemplateSelector" />
		<DataTemplate x:Key="ArchetypeTabTemplate" DataType="{x:Type local:Archetype}">
			<Border x:Name="TabBorder">
				<Border.BorderBrush>
					<DrawingBrush Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
						<DrawingBrush.Drawing>
							<DrawingGroup>
								<GeometryDrawing Brush="Black">
									<GeometryDrawing.Geometry>
										<GeometryGroup>
											<RectangleGeometry Rect="0,0,50,50" />
											<RectangleGeometry Rect="50,50,50,50" />
										</GeometryGroup>
									</GeometryDrawing.Geometry>
								</GeometryDrawing>
							</DrawingGroup>
						</DrawingBrush.Drawing>
					</DrawingBrush>
				</Border.BorderBrush>
				<TextBlock x:Name="TabHeader" Text="{Binding Name, Mode=OneWay}" Padding="3,0,3,0" FlowDirection="LeftToRight" />
			</Border>
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding TotalWildcardsNeeded}" Value="0">
					<Setter Property="Foreground" TargetName="TabHeader" Value="Blue" />
					<Setter Property="FontWeight" TargetName="TabHeader" Value="Bold" />
				</DataTrigger>
				<DataTrigger Binding="{Binding BoosterCost}" Value="0">
					<Setter Property="Foreground" TargetName="TabHeader" Value="Green" />
					<Setter Property="FontWeight" TargetName="TabHeader" Value="Bold" />
					<Setter Property="FontStyle" TargetName="TabHeader" Value="Italic" />
				</DataTrigger>
				<DataTrigger Binding="{Binding IsPlayerDeck}" Value="true">
					<Setter Property="Background" TargetName="TabBorder" Value="Yellow" />
					<Setter Property="BorderThickness" TargetName="TabBorder" Value="1" />
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>
		<DataTemplate x:Key="ArchetypeContentTemplate" DataType="{x:Type local:Archetype}">
			<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
				<StackPanel Orientation="Horizontal" Margin="3">
					<StackPanel Orientation="Vertical" Margin="3">
						<TextBlock FontWeight="Bold" HorizontalAlignment="Left" TextDecorations="Underline" Visibility="{Binding CommanderVisibility}" Text="{x:Static p:Resources.Deck_Commander}" />
						<StackPanel Orientation="Horizontal" Margin="3" Visibility="{Binding CommanderVisibility}">
							<TextBlock FontWeight="Bold" Text="{Binding CommanderName}" ToolTipService.ShowDuration="600000">
								<TextBlock.ToolTip>
									<ToolTip Background="Transparent" BorderThickness="0">
										<Grid MaxHeight="340" MaxWidth="488">
											<Border BorderBrush="Black" BorderThickness="1" Background="White"
																	HorizontalAlignment="Left" VerticalAlignment="Top">
												<TextBlock Text="{Binding CommanderCard.Card.FullName}" Margin="3" />
											</Border>
											<Image Source="{Binding CommanderCard.Card.ImageUri, Converter={StaticResource NullImageConverter}}"
																   Stretch="Uniform" StretchDirection="Both" RenderOptions.BitmapScalingMode="{Binding BitmapScalingMode}">
											</Image>
										</Grid>
									</ToolTip>
								</TextBlock.ToolTip>
								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Style.Triggers>
											<DataTrigger Binding="{Binding CommanderCard.Collected}" Value="False">
												<Setter Property="Foreground" Value="Red" />
												<Setter Property="TextDecorations" Value="Underline" />
												<Setter Property="FontStyle" Value="Normal" />
											</DataTrigger>
											<DataTrigger Binding="{Binding CommanderCard.Collected}" Value="True">
												<Setter Property="Foreground" Value="Green" />
												<Setter Property="FontStyle" Value="Italic" />
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
							<TextBlock HorizontalAlignment="Left" Text=" " />
							<TextBlock HorizontalAlignment="Left" Text="{Binding CommanderColorIdentity, StringFormat=({0})}" />
						</StackPanel>
						<TextBlock FontWeight="Bold" HorizontalAlignment="Left" Visibility="{Binding CommanderVisibility}" />

						<TextBlock FontWeight="Bold" HorizontalAlignment="Left" TextDecorations="Underline" Text="{x:Static p:Resources.Deck_MainDeck}" />
						<ItemsControl ItemsSource="{Binding MainDeckView}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Vertical" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="{Binding Quantity}" Width="15" TextAlignment="Right" />
										<TextBlock Text="x " />
										<TextBlock x:Name="CardName" FontWeight="Bold" Text="{Binding Card.PrintedName}" Foreground="Green" FontStyle="Italic" ToolTipService.ShowDuration="600000">
											<TextBlock.ToolTip>
												<ToolTip Background="Transparent" BorderThickness="0">
													<Grid MaxHeight="340" MaxWidth="488">
														<Border BorderBrush="Black" BorderThickness="1" Background="White"
																HorizontalAlignment="Left" VerticalAlignment="Top">
															<TextBlock Text="{Binding Card.FullName}" Margin="3" />
														</Border>
														<Image Source="{Binding Card.ImageUri, Converter={StaticResource NullImageConverter}}"
															   Stretch="Uniform" StretchDirection="Both" RenderOptions.BitmapScalingMode="{Binding BitmapScalingMode}">
														</Image>
													</Grid>
												</ToolTip>
											</TextBlock.ToolTip>
										</TextBlock>
										<TextBlock Text=" " />
										<TextBlock Text="{Binding Stats.MetaStatsView}" />
										<TextBlock x:Name="RotationCallout" Text="!!" FontWeight="Bold" Foreground="DarkOrange" Visibility="Collapsed">
											<TextBlock.ToolTip>
												<StackPanel Orientation="Horizontal">
													<TextBlock Text="This card will rotate out of Standard on " />
													<TextBlock Text="{Binding Card.Set.Rotation, StringFormat=yyyy-MM-dd}" />
													<TextBlock Text="." />
												</StackPanel>
											</TextBlock.ToolTip>
										</TextBlock>
									</StackPanel>
									<DataTemplate.Triggers>
										<DataTrigger Binding="{Binding Collected}" Value="False">
											<Setter Property="Foreground" TargetName="CardName" Value="Red" />
											<Setter Property="TextDecorations" TargetName="CardName" Value="Underline" />
											<Setter Property="FontStyle" TargetName="CardName" Value="Normal" />
										</DataTrigger>
										<DataTrigger Binding="{Binding Card.RotationSafe}" Value="False">
											<Setter Property="Visibility" TargetName="RotationCallout" Value="Visible" />
										</DataTrigger>
										<DataTrigger Binding="{Binding RotationProof}" Value="False">
											<Setter Property="Visibility" TargetName="RotationCallout" Value="Collapsed" />
										</DataTrigger>
									</DataTemplate.Triggers>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>

					<StackPanel Orientation="Vertical" Margin="3" Visibility="{Binding SideboardVisibility}">
						<TextBlock FontWeight="Bold" HorizontalAlignment="Left" TextDecorations="Underline" Text="{x:Static p:Resources.Deck_Sideboard}" />
						<ItemsControl ItemsSource="{Binding SideboardView}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Vertical" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="{Binding Quantity}" Width="15" TextAlignment="Right" />
										<TextBlock Text="x " />
										<TextBlock x:Name="CardName" FontWeight="Bold" Text="{Binding Card.PrintedName}" Foreground="Green" FontStyle="Italic" ToolTipService.ShowDuration="600000">
											<TextBlock.ToolTip>
												<ToolTip Background="Transparent" BorderThickness="0">
													<Grid MaxHeight="340" MaxWidth="488">
														<Border BorderBrush="Black" BorderThickness="1" Background="White"
																HorizontalAlignment="Left" VerticalAlignment="Top">
															<TextBlock Text="{Binding Card.FullName}" Margin="3" />
														</Border>
														<Image Source="{Binding Card.ImageUri, Converter={StaticResource NullImageConverter}}"
															   Stretch="Uniform" StretchDirection="Both">
														</Image>
													</Grid>
												</ToolTip>
											</TextBlock.ToolTip>
										</TextBlock>
										<TextBlock Text=" " />
										<TextBlock Text="{Binding Stats.MetaStatsView}" />
										<TextBlock x:Name="RotationCallout" Text="!!" FontWeight="Bold" Foreground="DarkOrange" Visibility="Collapsed">
											<TextBlock.ToolTip>
												<StackPanel Orientation="Horizontal">
													<TextBlock Text="This card will rotate out of Standard on " />
													<TextBlock Text="{Binding Card.Set.Rotation, StringFormat=yyyy-MM-dd}" />
													<TextBlock Text="." />
												</StackPanel>
											</TextBlock.ToolTip>
										</TextBlock>
									</StackPanel>
									<DataTemplate.Triggers>
										<DataTrigger Binding="{Binding Collected}" Value="False">
											<Setter Property="Foreground" TargetName="CardName" Value="Red" />
											<Setter Property="TextDecorations" TargetName="CardName" Value="Underline" />
											<Setter Property="FontStyle" TargetName="CardName" Value="Normal" />
										</DataTrigger>
										<DataTrigger Binding="{Binding Card.RotationSafe}" Value="False">
											<Setter Property="Visibility" TargetName="RotationCallout" Value="Visible" />
										</DataTrigger>
										<DataTrigger Binding="{Binding RotationProof}" Value="False">
											<Setter Property="Visibility" TargetName="RotationCallout" Value="Collapsed" />
										</DataTrigger>
									</DataTemplate.Triggers>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>

					<StackPanel Orientation="Vertical" Margin="3">
						<TextBlock FontWeight="Bold" HorizontalAlignment="Left" TextDecorations="Underline" Visibility="{Binding WinLossVisibility}" Text="{x:Static p:Resources.Deck_WinLoss}" />
						<TextBlock Text="{Binding WinLossView}" Visibility="{Binding WinLossVisibility}" />
						<TextBlock Visibility="{Binding WinLossVisibility}" />

						<TextBlock FontWeight="Bold" HorizontalAlignment="Left" TextDecorations="Underline" Text="{x:Static p:Resources.Deck_ExpectedCost}" />
						<StackPanel Orientation="Horizontal">
							<TextBlock HorizontalAlignment="Left" Text="{Binding BoosterCost, StringFormat={}{0:0.00}}"/>
							<TextBlock HorizontalAlignment="Left" Text="{Binding BoosterCostAfterWC, StringFormat={} ({0:0.00})}"/>
						</StackPanel>

						<TextBlock HorizontalAlignment="Left" Visibility="{Binding CollectVisibility}" />

						<TextBlock FontWeight="Bold" HorizontalAlignment="Left" TextDecorations="Underline" Visibility="{Binding CollectVisibility}" Text="{x:Static p:Resources.Deck_WildcardsNeeded}" />
						<ItemsControl ItemsSource="{Binding WildcardsNeeded}" Visibility="{Binding CollectVisibility}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Vertical" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="{Binding Item2}" Width="15" TextAlignment="Right" />
										<TextBlock Text="x " />
										<TextBlock x:Name="RarityName" FontWeight="Bold" />
										<TextBlock Text="{Binding Item3, StringFormat={} ({0})}" />
									</StackPanel>
									<DataTemplate.Triggers>
										<DataTrigger Binding="{Binding Item1}" Value="common">
											<Setter Property="Foreground" TargetName="RarityName" Value="Black" />
											<Setter Property="Text" TargetName="RarityName" Value="{x:Static p:Resources.Rarity_Common}" />
										</DataTrigger>
										<DataTrigger Binding="{Binding Item1}" Value="uncommon">
											<Setter Property="Foreground" TargetName="RarityName" Value="DarkGray" />
											<Setter Property="Text" TargetName="RarityName" Value="{x:Static p:Resources.Rarity_Uncommon}" />
										</DataTrigger>
										<DataTrigger Binding="{Binding Item1}" Value="rare">
											<Setter Property="Foreground" TargetName="RarityName" Value="DarkGoldenrod" />
											<Setter Property="Text" TargetName="RarityName" Value="{x:Static p:Resources.Rarity_Rare}" />
										</DataTrigger>
										<DataTrigger Binding="{Binding Item1}" Value="mythic">
											<Setter Property="Foreground" TargetName="RarityName" Value="DarkOrange" />
											<Setter Property="Text" TargetName="RarityName" Value="{x:Static p:Resources.Rarity_Mythic}" />
										</DataTrigger>
									</DataTemplate.Triggers>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>

						<TextBlock HorizontalAlignment="Left" Visibility="{Binding CollectVisibility}" />

						<TextBlock FontWeight="Bold" HorizontalAlignment="Left" TextDecorations="Underline" Visibility="{Binding PurchaseBoosterVisibility}" Text="{x:Static p:Resources.Deck_NextBooster}" />
						<TextBlock HorizontalAlignment="Left" Text="{Binding NextBoosterSetToPurchase}" Visibility="{Binding PurchaseBoosterVisibility}"/>

						<TextBlock HorizontalAlignment="Left" />

						<Button Click="Export_Click" Content="{x:Static p:Resources.Button_Export}" />

						<TextBlock HorizontalAlignment="Left" Visibility="{Binding CollectVisibility}" />

						<TextBlock FontWeight="Bold" HorizontalAlignment="Left" TextDecorations="Underline" Visibility="{Binding CollectVisibility}" Text="{x:Static p:Resources.Deck_SuggestedReplacements}" />
						<ItemsControl ItemsSource="{Binding SuggestedReplacementsView}" Visibility="{Binding CollectVisibility}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Vertical" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="{Binding Item3}" Width="15" TextAlignment="Right" />
										<TextBlock Text="x " />
										<TextBlock Text="{Binding Item1}" ToolTipService.ShowDuration="600000">
											<TextBlock.ToolTip>
												<ToolTip Background="Transparent" BorderThickness="0">
													<Grid MaxHeight="340" MaxWidth="488">
														<Border BorderBrush="Black" BorderThickness="1" Background="White"
																HorizontalAlignment="Left" VerticalAlignment="Top">
															<TextBlock Text="{Binding Item4.FullName}" Margin="3" />
														</Border>
														<Image Source="{Binding Item4.ImageUri, Converter={StaticResource NullImageConverter}}"
															   Stretch="Uniform" StretchDirection="Both">
														</Image>
													</Grid>
												</ToolTip>
											</TextBlock.ToolTip>
										</TextBlock>
										<TextBlock Text=" => " />
										<TextBlock Text="{Binding Item2}" ToolTipService.ShowDuration="600000">
											<TextBlock.ToolTip>
												<ToolTip Background="Transparent" BorderThickness="0">
													<Grid MaxHeight="340" MaxWidth="488">
														<Border BorderBrush="Black" BorderThickness="1" Background="White"
																HorizontalAlignment="Left" VerticalAlignment="Top">
															<TextBlock Text="{Binding Item5.FullName}" Margin="3" />
														</Border>
														<Image Source="{Binding Item5.ImageUri, Converter={StaticResource NullImageConverter}}"
															   Stretch="Uniform" StretchDirection="Both">
														</Image>
													</Grid>
												</ToolTip>
											</TextBlock.ToolTip>
										</TextBlock>
									</StackPanel>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>

						<TextBlock HorizontalAlignment="Left" Visibility="{Binding CollectVisibility}" />

						<Button Click="ExportSuggested_Click" Visibility="{Binding CollectVisibility}" Content="{x:Static p:Resources.Button_ExportReplacements}" />
					</StackPanel>

					<StackPanel Orientation="Vertical" Margin="3" Visibility="{Binding SimilarDecksVisibility}">
						<TextBlock FontWeight="Bold" HorizontalAlignment="Left" TextDecorations="Underline" Text="{x:Static p:Resources.Deck_AlternateConfigurations}" />

						<ItemsControl x:Name="SimilarDecksItemsControl" ItemsSource="{Binding SimilarDecks}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Vertical" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<StackPanel Orientation="Horizontal">
										<TextBlock>
											<Hyperlink Click="SimilarDeck_Click">
												<Run Text="{Binding Name, Mode=OneWay}" />
											</Hyperlink>
										</TextBlock>

										<TextBlock HorizontalAlignment="Left" Text=" ["/>
										<TextBlock HorizontalAlignment="Left" Text="{Binding BoosterCost, StringFormat={}{0:0.00}}"/>
										<TextBlock HorizontalAlignment="Left" Text="{Binding BoosterCostAfterWC, StringFormat={} ({0:0.00})}"/>
										<TextBlock HorizontalAlignment="Left" Text="]"/>
									</StackPanel>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>

					<TextBlock Visibility="{Binding ParentVisibility}">
						<Hyperlink Click="ParentDeck_Click">
							<Run Text="{x:Static p:Resources.Deck_BackToMain}" />
						</Hyperlink>
					</TextBlock>
				</StackPanel>
			</ScrollViewer>
		</DataTemplate>
		<DataTemplate x:Key="MetaReportTabTemplate" DataType="{x:Type local:MetaReport}">
			<TextBlock x:Name="TabHeader" Text="{x:Static p:Resources.Tab_MetaReport}" FontWeight="Bold" Foreground="DarkOrange" />
		</DataTemplate>
		<DataTemplate x:Key="MetaReportContentTemplate" DataType="{x:Type local:MetaReport}">
			<ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<TextBlock Grid.Column="0" Grid.Row="0" FontWeight="Bold" HorizontalAlignment="Left" TextDecorations="Underline" Text="{x:Static p:Resources.Meta_TopCards}" />
					<ItemsControl Grid.Column="0" Grid.Row="1" ItemsSource="{Binding ReportEntries}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<WrapPanel Orientation="Vertical" Margin="3" />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="{Binding TotalCopiesNeeded}" Width="15" TextAlignment="Right" />
									<TextBlock Text="x " />
									<TextBlock FontWeight="Bold" Text="{Binding Card.PrintedName}" ToolTipService.ShowDuration="600000">
										<TextBlock.ToolTip>
											<ToolTip Background="Transparent" BorderThickness="0">
												<Grid MaxHeight="340" MaxWidth="488">
													<Border BorderBrush="Black" BorderThickness="1" Background="White"
																HorizontalAlignment="Left" VerticalAlignment="Top">
														<TextBlock Text="{Binding Card.FullName}" Margin="3" />
													</Border>
													<Image Source="{Binding Card.ImageUri, Converter={StaticResource NullImageConverter}}"
															   Stretch="Uniform" StretchDirection="Both">
													</Image>
												</Grid>
											</ToolTip>
										</TextBlock.ToolTip>
									</TextBlock>
									<TextBlock Text=" " />
									<TextBlock Text="{Binding MetaStats}" />
								</StackPanel>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>

					<StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Margin="3">
						<TextBlock FontWeight="Bold" HorizontalAlignment="Left" TextDecorations="Underline" Text="{x:Static p:Resources.Meta_NextBooster}" />
						<TextBlock HorizontalAlignment="Left" Text="{Binding NextBoosterSetToPurchase}"/>

						<TextBlock Text="" />

						<TextBlock FontWeight="Bold" HorizontalAlignment="Left" TextDecorations="Underline" Text="{x:Static p:Resources.Meta_TopDecks}" />
						<ItemsControl Grid.Column="0" Grid.Row="1" ItemsSource="{Binding TopDecksToBuild}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Vertical" />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<StackPanel Orientation="Horizontal">
										<TextBlock>
											<Hyperlink Click="Hyperlink_Click">
												<Run Text="{Binding Name, Mode=OneWay}" />
											</Hyperlink>
										</TextBlock>
									</StackPanel>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</StackPanel>
				</Grid>
			</ScrollViewer>
		</DataTemplate>
	</Window.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<Grid x:Name="LoadingScreen" Grid.RowSpan="2">
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<TextBlock Grid.Row="0" Grid.Column="0" FontSize="24" Margin="3" FontWeight="Bold" VerticalAlignment="Bottom" HorizontalAlignment="Center" Text="{Binding LoadingText.Value, Mode=OneWay}" />
			<ProgressBar VerticalAlignment="Top" HorizontalAlignment="Center" Margin="3" Height="30" Grid.Row="1" Grid.Column="0" Width="300" Value="{Binding LoadingValue.Value, Mode=OneWay}"/>
		</Grid>
		<Border Grid.Row="0" x:Name="FilterPanel" Visibility="Collapsed" BorderThickness="0,0,0,1" BorderBrush="Gray">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
					<Button Margin="3" Click="Settings_Click" ToolTip="{x:Static p:Resources.Tooltip_Settings}">
						<Image Source="Resources/cog.png" Height="24" Width="24" RenderOptions.BitmapScalingMode="{Binding BitmapScalingMode}" />
					</Button>
				</StackPanel>

				<StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
					<Label Margin="3" FontWeight="Bold" VerticalContentAlignment="Center" Content="{x:Static p:Resources.Label_Format}" />
					<ComboBox x:Name="SelectedFormat" SelectedValue="{Binding Format.Value, Mode=TwoWay}" SelectedValuePath="Content"
						  Margin="3" VerticalContentAlignment="Center">
						<ComboBoxItem Content="{x:Static p:Resources.Item_Standard}" />
						<ComboBoxItem Content="{x:Static p:Resources.Item_ArenaStandard}" />
						<ComboBoxItem Content="{x:Static p:Resources.Item_Brawl}" />
						<ComboBoxItem Content="{x:Static p:Resources.Item_Historic_Bo1}" />
						<ComboBoxItem Content="{x:Static p:Resources.Item_Historic_Bo3}" />
					</ComboBox>
					<ToggleButton HorizontalAlignment="Center" Margin="3" Padding="3" FontWeight="Bold" IsChecked="{Binding RotationProof.Value, Mode=TwoWay}">
						<ToggleButton.Style>
							<Style TargetType="{x:Type ToggleButton}">
								<Setter Property="Content" Value="{x:Static p:Resources.Button_RotationAgnostic}"/>
								<Setter Property="ToolTip" Value="{x:Static p:Resources.Tooltip_RotationAgnostic}"/>
								<Setter Property="Foreground" Value="DarkGreen"/>
								<Style.Triggers>
									<Trigger Property="IsChecked" Value="True">
										<Setter Property="Content" Value="{x:Static p:Resources.Button_RotationProof}"/>
										<Setter Property="ToolTip" Value="{x:Static p:Resources.Tooltip_RotationProof}"/>
										<Setter Property="Foreground" Value="Red"/>
									</Trigger>
								</Style.Triggers>
							</Style>
						</ToggleButton.Style>
					</ToggleButton>
					<Button Margin="3" Click="Refresh_Click" ToolTip="{x:Static p:Resources.Tooltip_Refresh}">
						<Image Source="Resources/refresh.png" Height="24" Width="24" RenderOptions.BitmapScalingMode="{Binding BitmapScalingMode}" />
					</Button>
					<Button Margin="3" Click="HardRefresh_Click" ToolTip="{x:Static p:Resources.Tooltip_HardRefresh}">
						<Image Source="Resources/hard_refresh.png" Height="24" Width="24" RenderOptions.BitmapScalingMode="{Binding BitmapScalingMode}" />
					</Button>
				</StackPanel>
			</Grid>
		</Border>
		<TabControl x:Name="DeckTabs" Grid.Row="1" Visibility="Collapsed" TabStripPlacement="Left"
					ItemTemplateSelector="{StaticResource TabTemplateSelector}" ContentTemplateSelector="{StaticResource ContentTemplateSelector}">
			<TabControl.Template>
				<ControlTemplate TargetType="TabControl">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<ScrollViewer 
							HorizontalScrollBarVisibility="Disabled"  
							VerticalScrollBarVisibility="Auto" 
							FlowDirection="RightToLeft">
							<TabPanel 
								x:Name="HeaderPanel"
								Panel.ZIndex ="0" 
								KeyboardNavigation.TabIndex="1"
								IsItemsHost="true"
							/>
						</ScrollViewer>
						<ContentPresenter 
							x:Name="PART_SelectedContentHost"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							ContentSource="SelectedContent" Grid.Column="1"
						/>
					</Grid>
				</ControlTemplate>
			</TabControl.Template>
		</TabControl>
	</Grid>
</Window>
